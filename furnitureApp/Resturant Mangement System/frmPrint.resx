<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MinimizeBtn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAPoAAAA9CAYAAACEAXQxAAAABGdBTUEAALGPC/xhBQAAAvtJREFUeF7t
        3b1rFEEYx/GAlYjYiGillbWksRDESnwrbAIquZ1JQBCxSLIzEYKFhaCFRIvLzV7EImKhV1gIYpHCzkZB
        RBEEOxP/BBEtdDZ5qmNE4Z692eL7hU97zzY/LuTtJoiIiIiIiIiIiIiIiIiIiIiIaIRWvD3SK+354Ozl
        nrdLK664CeDvQmnmQ2k71ULnTLe8dFCm1L56ZXG658xa5czX4MxvACPw5lNwxWrwxTmZWN66rnM0PtTj
        5MMCGFl883yedfDxHXwm9WAA9MXB35Ppja/KG5d6GACNWpcJNl/9TYPEAwAYi+KaTLG5VrzdH7+E+Jx+
        AADjYS/IJJupKk03fRjAGL1fnp/aKbPUre/NycRBADl4syjT1C2+m99IHgSQw0b/+tQemadePWdeJo4B
        yKT+TTqZp06DwdSOnit+pY4ByOaWTFSn4OyJxBEAeb2Sieq0/UcqyUMA8vkgE9UpLFibOAIgr28yUZ16
        zs4ljgDI66dMVKetv5lNHwKQkUxUJ4YOtJNMVCeGDrSTTFQnhg60k0xUJ4YOtJNMVKfK2TupIwDykonq
        VHl7P3UEQF4yUZ0qb/qpIwDykonqVDmzljoCIC+ZqE5x6IPUEQB5yUR12vrf0okjAPKSieoUX3B9+ACA
        /GSiOsUXfDZ8AEB+MlGdgjd3U0cAZKX712tVaa8mjgDIa0MmqlPl7anEEQAZVc68k4nq9Mh1dqUOAcgn
        fqX9RCaqV/D2ReoYgDz6zpyVeerFJ6gCrfJGpqlb109Pxhf/MXQMQAbxjbeQaeoXyuJ26iiA8ak/NUkm
        2Vzx0JfhwwDGp+9nJmWOzRXm7KHUcQDNq3/ULVNsvuA6++LRt8MPAaA59b90kwmOt+DNcuqBAKjarEp7
        RWaXJ/mtuadDDwZgdJv1u3h/afqAzC1/8d39WPSg8uZjfMDvQw8M4P+9Dt7O9suLe2Ve7W37m3b1xy0D
        +JeqNMdXF4rDDxdnd8uEiIiIiIiIiIiIiIiIiIiIqJEmJv4AC+7Y8JmK+uMAAAAASUVORK5CYII=
</value>
  </data>
  <data name="CloseBtn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TVIAAAAASUVORK5CYII=
</value>
  </data>
</root>